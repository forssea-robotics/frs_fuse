# this yaml file is adapted from `fuse_simple_tutorial.yaml`
auv_simulator:
  ros__parameters:
    imu_orientation_roll_pitch_sigma: 0.001
    imu_orientation_yaw_sigma: 0.01
    imu_angular_vel_sigma: 0.001
    imu_linear_acc_sigma: 0.001
    imu_publish_frequency: 50.0
    absolute_position_x_sigma: 1.0
    absolute_position_y_sigma: 1.0
    absolute_position_z_sigma: 0.01
    absolute_position_publish_frequency: 1.0
    twist_linear_sigma: 0.001
    twist_publish_frequency: 25.0
    depth_sigma: 0.01
    depth_publish_frequency: 10.0
    altitude_sigma: 0.1
    altitude_publish_frequency: 25.0
    sea_surface_height: 5.0
    sea_bottom_height: -5.0
    x_amplitude: 5.0
    y_amplitude: 5.0
    z_amplitude: 2.0
    period: 60.0
state_estimator:
  ros__parameters:
    # Fixed-lag smoother configuration
    optimization_frequency: 20.0
    transaction_timeout: 0.01
    lag_duration: 0.5

    # all our sensors will be using this motion model
    motion_models:
      3d_motion_model:
        type: fuse_models::Omnidirectional3D
      # sea_surface_motion_model:
      #   type: fuse_models::Omnidirectional3D
      # sea_bottom_motion_model:
      #   type: fuse_models::Omnidirectional3D

    3d_motion_model:
      # x, y, z, roll, pitch, yaw, x_vel, y_vel, z_vel, roll_vel, pitch_vel, yaw_vel, x_acc, y_acc, z_acc
      process_noise_diagonal: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
      device_name: 'base_link'

    # sea_surface_motion_model:
    #   # x, y, z, roll, pitch, yaw, x_vel, y_vel, z_vel, roll_vel, pitch_vel, yaw_vel, x_acc, y_acc, z_acc
    #   process_noise_diagonal: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
    #   device_name: 'sea_surface'

    # sea_bottom_motion_model:
    #   # x, y, z, roll, pitch, yaw, x_vel, y_vel, z_vel, roll_vel, pitch_vel, yaw_vel, x_acc, y_acc, z_acc
    #   process_noise_diagonal: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
    #   device_name: 'sea_bottom'

    sensor_models:
      initial_localization_sensor:
        type: fuse_models::Omnidirectional3DIgnition
        motion_models: [3d_motion_model]
        ignition: true
      # initial_sea_surface:
      #   type: fuse_models::Omnidirectional3DIgnition
      #   motion_models: [sea_surface_motion_model]
      #   ignition: true
      # initial_sea_bottom:
      #   type: fuse_models::Omnidirectional3DIgnition
      #   motion_models: [sea_bottom_motion_model]
      #   ignition: true
      odometry_sensor:
        type: fuse_models::Odometry3D
        motion_models: [3d_motion_model]
      # sea_surface_sensor:
      #   type: fuse_models::Odometry3D
      #   motion_models: [sea_surface_motion_model]
      # sea_bottom_sensor:
      #   type: fuse_models::Odometry3D
      #   motion_models: [sea_bottom_motion_model]
      imu_sensor:
        type: fuse_models::Imu3D
        motion_models: [3d_motion_model]
      velocity_sensor:
        type: fuse_models::Twist3D
        motion_models: [3d_motion_model]

    initial_localization_sensor:
      publish_on_startup: true
      # x, y, z, roll, pitch, yaw, x_vel, y_vel, z_vel, roll_vel, pitch_vel, yaw_vel, x_acc, y_acc, z_acc
      initial_state: [5.0, 0.0, 0.0, 0.0, 0.0, 1.57, 0.52, 0.0, 0.0, 0.0, 0.0, 0.054, 0.0, 0.054, 0.0]
      initial_sigma: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
      device_name: 'base_link'

    # initial_sea_surface:
    #   publish_on_startup: true
    #   # x, y, z, roll, pitch, yaw, x_vel, y_vel, z_vel, roll_vel, pitch_vel, yaw_vel, x_acc, y_acc, z_acc
    #   initial_state: [0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    #   initial_sigma: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
    #   device_name: 'sea_surface'

    # initial_sea_bottom:
    #   publish_on_startup: true
    #   # x, y, z, roll, pitch, yaw, x_vel, y_vel, z_vel, roll_vel, pitch_vel, yaw_vel, x_acc, y_acc, z_acc
    #   initial_state: [0.0, 0.0, -5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    #   initial_sigma: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
    #   device_name: 'sea_bottom'

    velocity_sensor:
      topic: 'twist'
      target_frame: 'base_link'
      linear_dimensions: ['x', 'y', 'z']
      device_name: 'base_link'

    odometry_sensor:
      topic: 'odom'
      # we only want position and orientation, but you can get a full odometry measurement from this sensor
      position_dimensions: ['x', 'y', 'z']
      device_name: 'base_link'

    # sea_surface_sensor:
    #   topic: 'depth'
    #   # we only want position and orientation, but you can get a full odometry measurement from this sensor
    #   position_dimensions: ['x', 'y', 'z']
    #   orientation_dimensions: ['roll', 'pitch', 'yaw']
    #   pose_target_frame: 'odom'
    #   tf_timeout: 0.5
    #   device_name: 'sea_surface'

    # sea_bottom_sensor:
    #   topic: 'altitude'
    #   # we only want position and orientation, but you can get a full odometry measurement from this sensor
    #   position_dimensions: ['x', 'y', 'z']
    #   orientation_dimensions: ['roll', 'pitch', 'yaw']
    #   pose_target_frame: 'odom'
    #   tf_timeout: 0.5
    #   device_name: 'sea_bottom'

    imu_sensor:
      topic: 'imu'
      # we only care about linear acceleration for this tutorial
      linear_acceleration_dimensions: ['x', 'y', 'z']
      orientation_dimensions: ['roll', 'pitch', 'yaw']
      angular_velocity_dimensions: ['roll', 'pitch', 'yaw']
      device_name: 'base_link'

    # this publishes our estimated odometry
    publishers:
      filtered_publisher:
        type: fuse_models::Odometry3DPublisher
      # sea_surface_publisher:
      #   type: fuse_models::Odometry3DPublisher
      # sea_bottom_publisher:
      #   type: fuse_models::Odometry3DPublisher

    # the configuration of our output publisher
    filtered_publisher:
      topic: 'odom_filtered'
      base_link_output_frame_id: 'base_link'
      base_link_frame_id: 'base_link'
      odom_frame_id: 'odom'
      map_frame_id: 'map'
      world_frame_id: 'odom'
      navigation_frame_id: 'base_link_nav'
      publish_tf: true
      publish_nav_tf: true
      publish_frequency: 10.0
      device_name: 'base_link'
    # sea_surface_publisher:
    #   topic: 'sea_surface_filtered'
    #   base_link_output_frame_id: 'sea_surface'
    #   base_link_frame_id: 'sea_surface'
    #   odom_frame_id: 'odom'
    #   map_frame_id: 'map'
    #   world_frame_id: 'odom'
    #   publish_tf: true
    #   publish_frequency: 10.0
    #   device_name: 'sea_surface'
    # sea_bottom_publisher:
    #   topic: 'sea_bottom_filtered'
    #   base_link_output_frame_id: 'sea_bottom'
    #   base_link_frame_id: 'sea_bottom'
    #   odom_frame_id: 'odom'
    #   map_frame_id: 'map'
    #   world_frame_id: 'odom'
    #   publish_tf: true
    #   publish_frequency: 10.0
    #   device_name: 'sea_bottom'
